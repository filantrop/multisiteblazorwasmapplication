@page "/fetchdata"
@attribute [Authorize]            //👈 new addition
@using Application.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Public.Client.Services
@inject HttpClient Http
@*@inject IAdminService AdminService*@

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;
    private string error;

    protected override async Task OnInitializedAsync()
    {
        //forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("http://localhost:5000/WeatherForecast");
        //var response = await AdminService.WeatherForecasts();
        try
        {
            forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("WeatherForecast");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch(Exception ex)
        {
            error = ex.ToString();
        }
        //if (response.IsSuccessStatusCode)
        //{
        //    forecasts = response.Content;
        //}
        //else
        //    error = response.Error.Content;
    }
}


